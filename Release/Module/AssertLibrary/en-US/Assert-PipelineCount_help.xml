<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10">
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Assert-PipelineCount</maml:name>
        <command:parameter required="true" globbing="" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <command:parameterValue required="true">Object</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="" pipelineInput="false" position="1">
          <maml:name>Equals</maml:name>
          <command:parameterValue required="true">Int64</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Assert-PipelineCount</maml:name>
        <command:parameter required="true" globbing="" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <command:parameterValue required="true">Object</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="" pipelineInput="false" position="named">
          <maml:name>Minimum</maml:name>
          <command:parameterValue required="true">Int64</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Assert-PipelineCount</maml:name>
        <command:parameter required="true" globbing="" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <command:parameterValue required="true">Object</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="" pipelineInput="false" position="named">
          <maml:name>Maximum</maml:name>
          <command:parameterValue required="true">Int64</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>The object from the pipeline.

Note:
The argument for this parameter must come from the pipeline.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="" pipelineInput="false" position="1">
        <maml:name>Equals</maml:name>
        <maml:description>
          <maml:para>This function will throw an error if the number of objects in the pipeline is not equal to the number specified by this parameter.

Note:
A negative number will always cause this assertion to fail.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Int64</command:parameterValue>
        <dev:type>
          <maml:name>Int64</maml:name>
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="" pipelineInput="false" position="named">
        <maml:name>Minimum</maml:name>
        <maml:description>
          <maml:para>This function will throw an error if the number of objects in the pipeline is less than the number specified by this parameter.

Note:
A negative number will always cause this assertion to pass.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Int64</command:parameterValue>
        <dev:type>
          <maml:name>Int64</maml:name>
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="" pipelineInput="false" position="named">
        <maml:name>Maximum</maml:name>
        <maml:description>
          <maml:para>This function will throw an error if the number of objects in the pipeline is more than the number specified by this parameter.

Note:
A negative number will always cause this assertion to fail.</maml:para>
        </maml:description>
        <command:parameterValue required="true">Int64</command:parameterValue>
        <dev:type>
          <maml:name>Int64</maml:name>
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:details>
      <command:name>Assert-PipelineCount</command:name>
      <command:verb>
      </command:verb>
      <command:noun>
      </command:noun>
      <maml:description>
        <maml:para>Assert the number of objects in the pipeline.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>This function is useful for asserting that a function outputs the correct number of objects.

See the -Equals, -Minimum, and -Maximum parameters for more details.

Note:
This function will output all pipeline objects it receives until an error is thrown, or until there are no more objects left in the pipeline.</maml:para>
    </maml:description>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Object</maml:name>
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>An example of how this function might be used in a unit test.

#display passing assertions
$VerbosePreference = [System.Management.Automation.ActionPreference]::Continue

#display debug prompt on failing assertions
$DebugPreference = [System.Management.Automation.ActionPreference]::Inquire

$a = myFunc1 | Assert-PipelineCount 10
$b = myFunc2 | Assert-PipelineCount -Minimum 1
$c = myFunc3 | Assert-PipelineCount -Maximum 2
$d = myFunc4 | Assert-PipelineCount -Minimum 3 | Assert-PipelineCount -Maximum 14</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>$nums = 1..100 | Get-Random -Count 10 | Assert-PipelineCount 10</dev:code>
        <dev:remarks>
          <maml:para>Throws an error if Get-Random -Count 10 does not return exactly ten objects.</maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>$nums = 1..100 | Get-Random -Count 10 | Assert-PipelineCount -Maximum 10</dev:code>
        <dev:remarks>
          <maml:para>Throws an error if Get-Random -Count 10 returns more than ten objects.</maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>$nums = 1..100 | Get-Random -Count 10 | Assert-PipelineCount -Minimum 10</dev:code>
        <dev:remarks>
          <maml:para>Throws an error if Get-Random -Count 10 returns less than ten objects.</maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>$nums = 1..100 | Get-Random -Count 10 | Assert-PipelineCount 10 -Verbose</dev:code>
        <dev:remarks>
          <maml:para>Throws an error if Get-Random -Count 10 does not return exactly ten objects.
The -Verbose switch will output the result of the assertion to the Verbose stream.</maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>$nums = 1..100 | Get-Random -Count 10 | Assert-PipelineCount 10 -Debug</dev:code>
        <dev:remarks>
          <maml:para>Throws an error if Get-Random -Count 10 does not return exactly ten objects.
The -Debug switch gives you a chance to investigate a failing assertion before an error is thrown.</maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>$a = Get-ChildItem 'a*' | Assert-PipelineCount -Minimum 5 | Assert-PipelineCount -Maximum 10</dev:code>
        <dev:remarks>
          <maml:para>Throws an error if Get-ChildItem 'a*' either returns less than five objects, or returns more than 10 objects.</maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
          <maml:para>
          </maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Assert-True
Assert-False
Assert-Null
Assert-NotNull
Assert-PipelineEmpty
Assert-PipelineAny
Assert-PipelineSingle</maml:linkText>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
</helpItems>
