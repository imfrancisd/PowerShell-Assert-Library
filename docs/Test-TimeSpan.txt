
NAME
    Test-TimeSpan
    
SYNOPSIS
    An alternative to PowerShell's comparison operators when testing TimeSpan objects in unit test scenarios.
    
SYNTAX
    Test-TimeSpan [-Value] <Object> [-IsTimeSpan] [<CommonParameters>]
    
    Test-TimeSpan [-Value] <Object> -Equals <Object> [-Property <String[]>] [<CommonParameters>]
    
    Test-TimeSpan [-Value] <Object> -NotEquals <Object> [-Property <String[]>] [<CommonParameters>]
    
    Test-TimeSpan [-Value] <Object> -LessThan <Object> [-Property <String[]>] [<CommonParameters>]
    
    Test-TimeSpan [-Value] <Object> -LessThanOrEqualTo <Object> [-Property <String[]>] [<CommonParameters>]
    
    Test-TimeSpan [-Value] <Object> -GreaterThan <Object> [-Property <String[]>] [<CommonParameters>]
    
    Test-TimeSpan [-Value] <Object> -GreaterThanOrEqualTo <Object> [-Property <String[]>] [<CommonParameters>]
    
    
DESCRIPTION
    This function tests a TimeSpan object for type and equality without the implicit conversions or the filtering 
    semantics from the PowerShell comparison operators.
    
    This function will return one of the following values:
        $true
        $false
        $null
    
    A return value of $null indicates an invalid test. See each parameter for specific conditions that causes this 
    function to return $true, $false, or $null.
    

PARAMETERS
    -Value <Object>
        The value to test.
        
        Required?                    true
        Position?                    1
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -IsTimeSpan [<SwitchParameter>]
        Tests if the value is a TimeSpan value.
        
        Return Value   Condition
        ------------   ---------
        $null          never
        $false         value is not a TimeSpan
        $true          value is a TimeSpan
        
        Required?                    false
        Position?                    named
        Default value                False
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Equals <Object>
        Tests if the first value is equal to the second.
        
        The -Equals parameter has the alias -eq.
        
        Return Value   Condition
        ------------   ---------
        $null          one or both of the values is not a TimeSpan
        $false         System.TimeSpan.Compare(TimeSpan, TimeSpan) != 0
        $true          System.TimeSpan.Compare(TimeSpan, TimeSpan) == 0
        
        Note: If the -Property parameter is specified, a different comparison method is used.
        
        Required?                    true
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -NotEquals <Object>
        Tests if the first value is not equal to the second.
        
        The -NotEquals parameter has the alias -ne.
        
        Return Value   Condition
        ------------   ---------
        $null          one or both of the values is not a TimeSpan
        $false         System.TimeSpan.Compare(TimeSpan, TimeSpan) == 0
        $true          System.TimeSpan.Compare(TimeSpan, TimeSpan) != 0
        
        Note: If the -Property parameter is specified, a different comparison method is used.
        
        Required?                    true
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -LessThan <Object>
        Tests if the first value is less than the second.
        
        The -LessThan parameter has the alias -lt.
        
        Return Value   Condition
        ------------   ---------
        $null          one or both of the values is not a TimeSpan
        $false         System.TimeSpan.Compare(TimeSpan, TimeSpan) >= 0
        $true          System.TimeSpan.Compare(TimeSpan, TimeSpan) < 0
        
        Note: If the -Property parameter is specified, a different comparison method is used.
        
        Required?                    true
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -LessThanOrEqualTo <Object>
        Tests if the first value is less than or equal to the second.
        
        The -LessThanOrEqualTo parameter has the alias -le.
        
        Return Value   Condition
        ------------   ---------
        $null          one or both of the values is not a TimeSpan
        $false         System.TimeSpan.Compare(TimeSpan, TimeSpan) > 0
        $true          System.TimeSpan.Compare(TimeSpan, TimeSpan) <= 0
        
        Note: If the -Property parameter is specified, a different comparison method is used.
        
        Required?                    true
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -GreaterThan <Object>
        Tests if the first value is greater than the second.
        
        The -GreaterThan parameter has the alias -gt.
        
        Return Value   Condition
        ------------   ---------
        $null          one or both of the values is not a TimeSpan
        $false         System.TimeSpan.Compare(TimeSpan, TimeSpan) <= 0
        $true          System.TimeSpan.Compare(TimeSpan, TimeSpan) > 0
        
        Note: If the -Property parameter is specified, a different comparison method is used.
        
        Required?                    true
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -GreaterThanOrEqualTo <Object>
        Tests if the first value is greater than or equal to the second.
        
        The -GreaterThanOrEqualTo parameter has the alias -ge.
        
        Return Value   Condition
        ------------   ---------
        $null          one or both of the values is not a TimeSpan
        $false         System.TimeSpan.Compare(TimeSpan, TimeSpan) < 0
        $true          System.TimeSpan.Compare(TimeSpan, TimeSpan) >= 0
        
        Note: If the -Property parameter is specified, a different comparison method is used.
        
        Required?                    true
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Property <String[]>
        Compares the TimeSpan values using the specified properties.
        
        Note that the order that you specify the properties is significant. The first property specified has the 
        highest priority in the comparison, and the last property specified has the lowest priority in the comparison.
        
        Allowed Properties
        ------------------
        Days, Hours, Minutes, Seconds, Milliseconds, Ticks, TotalDays, TotalHours, TotalMilliseconds, TotalMinutes, 
        TotalSeconds
        
        No wildcards are allowed.
        No calculated properties (script blocks) are allowed.
        Specifying this parameter with a $null or an empty array causes the comparisons to return $null.
        
        Comparison method
        -----------------
        1. Start with the first property specified.
        2. Compare the properties from the two TimeSpan objects using the CompareTo method.
        3. If the properties are equal, repeat steps 2 and 3 with the remaining properties.
        4. Done.
        
        PowerShell Note:
        Synthetic properties are not used in comparisons.
        For example, when the hours property is compared, an expression like $a.psbase.hours is used instead of 
        $a.hours.
        
        Required?                    false
        Position?                    named
        Default value                
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    <CommonParameters>
        This cmdlet supports the common parameters: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable, and OutVariable. For more information, see 
        about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216). 
    
INPUTS
    None
    
    This function does not accept input from the pipeline.
        
    
    
    
OUTPUTS
    System.Boolean
    
    This function returns a Boolean if the test can be performed.
        
    
    
    $null
    
    This function returns $null if the test cannot be performed.
        
    
    
    
NOTES
    
    
        An example of how this function might be used in a unit test.
        
        #recommended alias
        set-alias 'timespan?' 'test-timeSpan'
        
        assert-true (timespan? $a)
        assert-true (timespan? $a -eq $b -property days, hours, minutes)
    
    -------------------------- EXAMPLE 1 --------------------------
    
    PS C:\>Test-TimeSpan $a
    
    
    Returns $true if $a is a TimeSpan object.
    
    
    
    
    
    -------------------------- EXAMPLE 2 --------------------------
    
    PS C:\>Test-TimeSpan $a -eq $b
    
    
    Returns $true if $a and $b are both TimeSpan objects with the same value.
    Returns $null if $a or $b is not a TimeSpan object.
    
    
    
    
    
    -------------------------- EXAMPLE 3 --------------------------
    
    PS C:\>Test-TimeSpan $a -eq $b -property days, hours
    
    
    Returns $true if $a and $b are both TimeSpan objects with the same days and hours values.
    Returns $null if $a or $b is not a TimeSpan object.
    
    Note that the order of the properties specified is significant. See the -Property parameter for more details.
    
    
    
    
    
    
RELATED LINKS
    Test-DateTime 
    Test-Guid 
    Test-Number 
    Test-String 
    Test-Text 
    Test-Version 



